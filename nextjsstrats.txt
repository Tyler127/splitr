step 1: have node installed version 18+

Creating next.js project:
    npx create-next-app@latest

NPM install:
    npm install

Running Dev Server:
    npm run dev 

    runs the app on a port


What the files do:
    next.config.js	              Configuration file for Next.js
    package.json	              Project dependencies and scripts
    instrumentation.ts	          OpenTelemetry and Instrumentation file
    middleware.ts	              Next.js request middleware
    .env	                      Environment variables
    .env.local	                  Local environment variables
    .env.production	              Production environment variables
    .env.development	          Development environment variables
    .eslintrc.json	              Configuration file for ESLint
    .gitignore	                  Git files and folders to ignore
    next-env.d.ts	              TypeScript declaration file for Next.js
    tsconfig.json	              Configuration file for TypeScript
    jsconfig.json	              Configuration file for JavaScript


Routing Fundamentals:
    - Folders define routes
    - Files create the UI shown for a route segment
    - Route segment is really just a URL that maps to a folder
      with a leaf file

    - File Conventions
        layout	        Shared UI for a segment and its children
        page	        Unique UI of a route and make routes publicly accessible
        loading	        Loading UI for a segment and its children
        not-found	    Not found UI for a segment and its children
        error	        Error UI for a segment and its children
        global-error	Global Error UI
        route	        Server-side API endpoint
        template	    Specialized re-rendered Layout UI
        default	        Fallback UI for Parallel Routes

    - Component Hierarchy
        layout.js
        template.js
        error.js (React error boundary)
        loading.js (React suspense boundary)
        not-found.js (React error boundary)
        page.js or nested layout.js


Defining Routes:
    - Folders are used as URL segments.

    EX: 
        URL:
        /homepage/settings

        - Here homepage and settings are route segments.
    
        Folder Structure:
        app >
            homepage >
                page.js
                settings >
                    page.js

    - URLs routing to folders without a page.js file 
      are not publicly accessible.
        - Typing in a URL to one of these routes doesn't load anything
        - These folders can store components, CSS, etc.

    - layout.js files are UI shared between routes

    - page.js files are UI unique to a route 


Dynamic Routes:
    - Create a folder with the name in brackets

    - 



Pages and Layouts:















    